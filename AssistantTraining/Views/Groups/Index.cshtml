@model IEnumerable<AssistantTraining.Models.Group>
@using GridMvc.Html

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>


<div class="row">
    <div class="col-md-1">
        <a href="@Url.Action("Create", "Groups")" class="btn btn-default">
            Create
            <span class="glyphicon" aria-hidden="true"></span>
        </a>
    </div>
        <div class="col-md-1">
            <a href="@Url.Action("Excel", "Groups")" class="btn btn-default">
                Export
                <span class="glyphicon" aria-hidden="true"></span>
            </a>
        </div>
        <div class="col-md-2">
        </div>
        <div class="col-md-4 pull-right">

            <form class="navbar-form" role="search" id="idFilterWorkersByWorker" method="get" action="/Groups/SearchByGroup">
                <div class="input-group">
                    <input type="text" class="typeahead form-control" autocomplete="off" placeholder="Groups" spellcheck="false" name="srchtermWorkerByGroup" id="srchtermWorkerByGroup">
                    <div class="input-group-btn">
                        <button class="btn btn-default" type="submit"><i class="glyphicon glyphicon-search"></i></button>
                    </div>
                </div>
            </form>
        </div>
    </div>



    @Html.Grid(Model).Columns(columns =>
{
    columns.Add(foo => foo.GroupName).Titled("Nazwa").Sortable(true).Filterable(true).SetWidth(110);
    /* Adding not mapped column, that renders body, using inline Razor html helper */
    columns.Add()
        .Encoded(false)
        .Sanitized(false)
        .SetWidth(30)
        .RenderValueAs(foo => Edit(foo.ID));

}).WithPaging(10)

    @helper Edit(int Id)
    {
    @Html.ActionLink("Details", "Details", new { id = Id })

if (User.IsInRole("Administrator"))
{
        @:| @Html.ActionLink("Edit", "Edit", new { id = Id })
    }
    if (User.IsInRole("Administrator"))
    {
        @:| @Html.ActionLink("Delete", "Delete", new { id = Id })
    }
}

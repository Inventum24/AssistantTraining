@model AssistantTraining.ViewModel.InstructionIndexData

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>




@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Instruction</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.Number, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Number, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.TextBoxFor(model => model.Number, new { @class = "form-control", @readonly = "readonly" })
                @*@Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Version, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Version, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.TextBoxFor(model => model.Version, new { @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.Version, "", new { @class = "text-danger" })
                <div>
                   <br />
                    <button type="button" class="btn" data-toggle="modal" data-target="#myModal">Change Version</button>
                </div>
                
                <!-- Modal -->
                <div class="modal fade" id="myModal" role="dialog">
                    <div class="modal-dialog">

                        <!-- Modal content-->
                        <div class="modal-content">
                            <div class="modal-header">
                                <button type="button" class="close" data-dismiss="modal">&times;</button>
                                <h4 class="modal-title">Change Version</h4>
                            </div>
                            <div class="modal-body">
                                Are you sure you want to change the version? After saving will create a new version of the instruction.

                                @Html.EditorFor(model => model.Version, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                <button type="button" class="btn btn-primary" id="save-event">Yes</button>
                            </div>
                        </div>

                    </div>
                </div>


            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Items, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(x => x.SelectedId, Model.Items, new { @class = "form-control" })
                @*@Html.DropDownList("Name", Model.Items, "Dropdown", new { @class = "form-control" })*@
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<script type="text/javascript">

    $(document).ready(function () {
        $('#save-event').on('click',
                    function (evt) {
                        console.log('triggered');
                    }
        );
    });
</script>

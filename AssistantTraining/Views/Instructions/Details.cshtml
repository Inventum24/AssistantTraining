@model AssistantTraining.ViewModel.InstructionDetailsData

@using GridMvc.Html

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<a href="@Url.Action("Excel", "Instructions", new { id = ViewData["IdInstruction"] })" class="btn btn-default">
    Export to Excel
    <span class="glyphicon" aria-hidden="true"></span>
</a>

<div>
    <h4>Instruction</h4>
    <hr />
    @*<dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Version)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Version)
        </dd>

    </dl>*@

@Html.Grid(Model.Groups.ToList()).Columns(columns =>
{
    columns.Add(foo => foo.GroupName).Titled("Grupy").Sortable(true).Filterable(true).SetWidth(110);

}).WithPaging(10)

@Html.Grid(Model.instructionVsTrainingList.ToList()).Columns(columns =>
{
    columns.Add(foo => foo.WorkerLastName).Titled("Nazwisko").Sortable(true).Filterable(true).SetWidth(110);
    columns.Add(foo => foo.WorkerFirstMidName).Titled("Imię").Sortable(true).Filterable(true).SetWidth(110);
    columns.Add(foo => foo.InstructionName).Titled("Numer instrukcji").Sortable(true).Filterable(true).SetWidth(110);
    columns.Add(foo => foo.InstructionVersion).Titled("Wersja instrukcji").Sortable(true).Filterable(true).SetWidth(110);
    columns.Add(foo => foo.InstructionNumber).Titled("Numer instrukcji").Sortable(true).Filterable(true).SetWidth(110);
    columns.Add(foo => foo.DateOfTraining).Titled("Data szkolenia").Sortable(true).Filterable(true).SetWidth(110);

}).WithPaging(10)

</div>
<p>
    @Html.ActionLink("Back to List", "Index")
</p>
